# syntax = docker/dockerfile:1.2

ARG BUILD_IMAGE=continuumio/miniconda3
ARG PYTHON_VERSION=3.8

FROM ${BUILD_IMAGE} as build

ENV PYTHONUNBUFFERED TRUE
ENV CONDA_ALWAYS_COPY=true


RUN --mount=type=cache,target=/var/cache/apt,sharing=locked --mount=type=cache,target=/var/lib/apt \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    ca-certificates \
    sudo \
    curl \
    zsh \
    build-essential \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# ####################
# Detectron 2 - Build
######################
FROM build as detectron2_build

RUN --mount=type=cache,target=/opt/conda/pkgs \
    conda create --name detectron2 python=3.8.11

SHELL ["conda", "run", "-n", "detectron2", "/bin/bash", "-c"]

RUN  --mount=type=cache,target=/opt/conda/pkgs --mount=type=cache,target=/root/.cache/pip \
    conda install pytorch==1.9.0 torchvision==0.10.0 torchserve==0.4.0 cpuonly -c pytorch \
    && pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cpu/torch1.9/index.html \
    && conda install conda-pack \
    && pip install opencv-python==4.5.3.56

# Use conda-pack to create a standalone enviornment
# in /venv:
RUN conda-pack -n detectron2 -o /tmp/env.tar
RUN mkdir /venv && cd /venv && tar xf /tmp/env.tar && \
    rm /tmp/env.tar

# We've put venv in same path it'll be in final image,
# so now fix up paths:
RUN /venv/bin/conda-unpack



# ####################
# Detectron 2 - Runtime
######################
FROM ubuntu:18.04 AS detectron2_runtime

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    ca-certificates \
    curl \
    python3-pip \
    vim \
    sudo \
    default-jre \
    && rm -rf /var/lib/apt/lists/*

RUN pip3 install boto3
RUN pip3 install awscli
RUN useradd -m model-server
USER model-server
WORKDIR /home/model-server

# Copy /venv from the previous stage:
COPY --from=detectron2_build /venv /venv


RUN mkdir -p /home/model-server/torchserve_d2
COPY --chown=model-server:model-server torchserve_d2/ /home/model-server/torchserve_d2

ENV PATH /venv/bin/:${PATH}

# Downloads MAR File from S3 Bucket
RUN bash "./torchserve_d2/download_mar.sh"

# start torchserve for detectron2 model in background
CMD ["/home/model-server/torchserve_d2/torchserve_start.sh"]



